//! The core library for the weak learner in the boosting protocol.
use crate::Sample;

/// A trait that returns a struct 
/// implementing [`Self::Hypothesis`].
/// # Required Methods
/// - [`WeakLearner::name`]
/// - [`WeakLearner::info`] ... optional.
/// - [`WeakLearner::produce`]
pub trait WeakLearner {
    /// Returned hypothesis generated by `self`.
    type Hypothesis;

    /// Defines the name of weak-learning algorithm.
    fn name(&self) -> &str {
        "Not specified"
    }

    /// Returns the information of the weak learning algorithm as `String`.
    fn info(&self) -> Option<Vec<(&str, String)>> {
        None
    }

    /// For classification, `WeakLearner::produce`
    /// outputs a struct implementing [`crate::hypothesis::Classifier`] 
    /// that achieves high accuracy
    /// on the given distribution `dist`.
    fn produce(&self, sample: &Sample, dist: &[f64]) -> Self::Hypothesis;
}

